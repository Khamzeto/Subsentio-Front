// app/page.tsx (Server Component)
import { cookies } from 'next/headers';
import WordsList from '@/components/vocabulary/Vocabulary';
import fs from 'fs';
import path from 'path';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
export async function generateMetadata() {
  const lang = cookies().get('lang')?.value || 'en'; // –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–∑ –∫—É–∫–æ–≤

  // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ø–µ—Ä–µ–≤–æ–¥–∞
  const translationsPath = path.join(
    process.cwd(),
    'public',
    'locales',
    lang,
    'common.json'
  );

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
  let translations;
  try {
    const fileContents = fs.readFileSync(translationsPath, 'utf8');
    translations = JSON.parse(fileContents);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è —è–∑—ã–∫–∞ ${lang}:`, error);
    translations = { vocabulary: { title: 'Vocabulary' } }; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  return {
    title: `üìö${translations.dashboard?.dictionary || 'Vocabulary'}`, // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏ —Å–º–∞–π–ª–∏–∫–æ–º
  };
}

export default async function HomePage() {
  // –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏ —Ç–æ–∫–µ–Ω –∏–∑ –∫—É–∫–æ–≤
  const lang = cookies().get('lang')?.value || 'en';
  const authStorage = cookies().get('auth-storage')?.value;

  let accessToken = null;

  // –ï—Å–ª–∏ –∫—É–∫–∞ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–∞—Ä—Å–∏–º –µ—ë
  if (authStorage) {
    try {
      const parsedStorage = JSON.parse(authStorage);
      accessToken = parsedStorage.accessToken;
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫—É–∫–∏ auth-storage:', err);
    }
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (WordsList) –∏ –ø–µ—Ä–µ–¥–∞—ë–º –µ–º—É –ø—Ä–æ–ø—ã
  return <WordsList initialLang={lang} />;
}
